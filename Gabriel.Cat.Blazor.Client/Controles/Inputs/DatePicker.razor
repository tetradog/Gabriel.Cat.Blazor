
    <EditForm Model="Data"  style="display:inline" >
        @if (IsNullable)
        {
            <InputDate @bind-Value="DataNullable.Data"  style="display:inline"  />
        }
        else
        {
            <InputDate @bind-Value="Data.Data" style="display:inline"  />
        }

    </EditForm>

@code {
    [Parameter] public bool IsNullable { get; set; }
    [Parameter] public EventCallback<DateTime> OnChange { get; set; }
    [Parameter] public DateTime? InitValue { get; set; }
    InputData<DateTime?> DataNullable { get; set; }
    InputData<DateTime> Data { get; set; }
    protected override async Task OnInitializedAsync()
    {
        Data = new InputData<DateTime>();
        DataNullable = new InputData<DateTime?>();

        if (IsNullable)
        {
            DataNullable.Data = InitValue;
        }
        else if (InitValue.HasValue)
        {
            Data.Data = InitValue.Value;
        }

        DataNullable.PropertyChanged += async (s, e) => await OnChange.InvokeAsync(DataNullable.Data.GetValueOrDefault());
        Data.PropertyChanged += async (s, e) => await OnChange.InvokeAsync(Data.Data);

        await base.OnInitializedAsync();
    }
    public void Set(DateTime data) => Data.Data = data;
    public void Set(DateTime? data) => DataNullable.Data = data;
}