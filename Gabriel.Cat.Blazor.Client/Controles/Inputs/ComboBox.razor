@typeparam T
<select @bind="@SelectedItem">
    @if (!Equals(Source, default))
    {
        <option value="0"></option>
        @if (!Equals(ChildContent, default))
        {
            @for (int i = 0; i < Source.Count; i++)
            {
                <option value="@(i+1)">
                    ChildContent(Source[i]);
                </option>
            }
        }
        else
        {
            @for (int i = 0; i < Source.Count; i++)
            {
                <option value="@(i+1)">
                    @Source[i].ToString();
                </option>
            }
        }
    }
</select>

@code {
    [Parameter] public IList<T> Source { get; set; }
    [Parameter] public RenderFragment<T> ChildContent { get; set; }
    [Parameter] public EventCallback<T> OnSelectionChanged { get; set; }
    int selectedItem = 0;
    int SelectedItem {
        get => selectedItem;
        set
        {
            selectedItem = value;
            if (!Equals(OnSelectionChanged, default))
            {
                if (selectedItem == 0)
                {
                    OnSelectionChanged.InvokeAsync(default(T));
                }
                else
                {
                    OnSelectionChanged.InvokeAsync(Source[selectedItem - 1]);
                }
            }
        }
    }

}
